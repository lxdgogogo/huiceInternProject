/*
 * This file is generated by jOOQ.
 */
package com.hc.summer.db.tables;


import com.hc.summer.db.FdkUser2;
import com.hc.summer.db.Indexes;
import com.hc.summer.db.Keys;
import com.hc.summer.db.tables.records.SysUserRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUser extends TableImpl<SysUserRecord> {

    private static final long serialVersionUID = -148137544;

    /**
     * The reference instance of <code>fdk_user2.sys_user</code>
     */
    public static final SysUser SYS_USER = new SysUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysUserRecord> getRecordType() {
        return SysUserRecord.class;
    }

    /**
     * The column <code>fdk_user2.sys_user.id</code>.
     */
    public final TableField<SysUserRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>fdk_user2.sys_user.user_name</code>. 用户姓名|文弟友|2021-01-18
     */
    public final TableField<SysUserRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户姓名|文弟友|2021-01-18");

    /**
     * The column <code>fdk_user2.sys_user.user_phone</code>. 用户手机号|文弟友|2021-01-18
     */
    public final TableField<SysUserRecord, String> USER_PHONE = createField(DSL.name("user_phone"), org.jooq.impl.SQLDataType.VARCHAR(13).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户手机号|文弟友|2021-01-18");

    /**
     * The column <code>fdk_user2.sys_user.password</code>. 登录密码|文弟友|2021-01-18
     */
    public final TableField<SysUserRecord, String> PASSWORD = createField(DSL.name("password"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "登录密码|文弟友|2021-01-18");

    /**
     * The column <code>fdk_user2.sys_user.salt</code>. 密码加盐hash值|文弟友|2021-01-18
     */
    public final TableField<SysUserRecord, String> SALT = createField(DSL.name("salt"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "密码加盐hash值|文弟友|2021-01-18");

    /**
     * The column <code>fdk_user2.sys_user.user_pid</code>. 员工上级ID|文弟友|2021-01-18
     */
    public final TableField<SysUserRecord, Long> USER_PID = createField(DSL.name("user_pid"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "员工上级ID|文弟友|2021-01-18");

    /**
     * The column <code>fdk_user2.sys_user.delete_flag</code>. 删除符号|@0：未删除；@1：有删除|文弟友|2021-01-18
     */
    public final TableField<SysUserRecord, Byte> DELETE_FLAG = createField(DSL.name("delete_flag"), org.jooq.impl.SQLDataType.TINYINT, this, "删除符号|@0：未删除；@1：有删除|文弟友|2021-01-18");

    /**
     * The column <code>fdk_user2.sys_user.created</code>.
     */
    public final TableField<SysUserRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>fdk_user2.sys_user.modified</code>.
     */
    public final TableField<SysUserRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>fdk_user2.sys_user</code> table reference
     */
    public SysUser() {
        this(DSL.name("sys_user"), null);
    }

    /**
     * Create an aliased <code>fdk_user2.sys_user</code> table reference
     */
    public SysUser(String alias) {
        this(DSL.name(alias), SYS_USER);
    }

    /**
     * Create an aliased <code>fdk_user2.sys_user</code> table reference
     */
    public SysUser(Name alias) {
        this(alias, SYS_USER);
    }

    private SysUser(Name alias, Table<SysUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysUser(Name alias, Table<SysUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SysUser(Table<O> child, ForeignKey<O, SysUserRecord> key) {
        super(child, key, SYS_USER);
    }

    @Override
    public Schema getSchema() {
        return FdkUser2.FDK_USER2;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_USER_PRIMARY, Indexes.SYS_USER_USER_PHONE);
    }

    @Override
    public UniqueKey<SysUserRecord> getPrimaryKey() {
        return Keys.KEY_SYS_USER_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysUserRecord>> getKeys() {
        return Arrays.<UniqueKey<SysUserRecord>>asList(Keys.KEY_SYS_USER_PRIMARY, Keys.KEY_SYS_USER_USER_PHONE);
    }

    @Override
    public SysUser as(String alias) {
        return new SysUser(DSL.name(alias), this);
    }

    @Override
    public SysUser as(Name alias) {
        return new SysUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(String name) {
        return new SysUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysUser rename(Name name) {
        return new SysUser(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, String, Long, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
