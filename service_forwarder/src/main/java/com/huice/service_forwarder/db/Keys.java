/*
 * This file is generated by jOOQ.
 */
package com.huice.service_forwarder.db;


import com.huice.service_forwarder.db.tables.BaseBusinessInfo;
import com.huice.service_forwarder.db.tables.PlatformSku;
import com.huice.service_forwarder.db.tables.PlatformSpu;
import com.huice.service_forwarder.db.tables.Seller;
import com.huice.service_forwarder.db.tables.SellerFetchOrder;
import com.huice.service_forwarder.db.tables.records.BaseBusinessInfoRecord;
import com.huice.service_forwarder.db.tables.records.PlatformSkuRecord;
import com.huice.service_forwarder.db.tables.records.PlatformSpuRecord;
import com.huice.service_forwarder.db.tables.records.SellerFetchOrderRecord;
import com.huice.service_forwarder.db.tables.records.SellerRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>fdk_forwarder2</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BaseBusinessInfoRecord, Long> IDENTITY_BASE_BUSINESS_INFO = Identities0.IDENTITY_BASE_BUSINESS_INFO;
    public static final Identity<PlatformSkuRecord, Long> IDENTITY_PLATFORM_SKU = Identities0.IDENTITY_PLATFORM_SKU;
    public static final Identity<PlatformSpuRecord, Long> IDENTITY_PLATFORM_SPU = Identities0.IDENTITY_PLATFORM_SPU;
    public static final Identity<SellerFetchOrderRecord, Long> IDENTITY_SELLER_FETCH_ORDER = Identities0.IDENTITY_SELLER_FETCH_ORDER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BaseBusinessInfoRecord> KEY_BASE_BUSINESS_INFO_PRIMARY = UniqueKeys0.KEY_BASE_BUSINESS_INFO_PRIMARY;
    public static final UniqueKey<PlatformSkuRecord> KEY_PLATFORM_SKU_PRIMARY = UniqueKeys0.KEY_PLATFORM_SKU_PRIMARY;
    public static final UniqueKey<PlatformSpuRecord> KEY_PLATFORM_SPU_PRIMARY = UniqueKeys0.KEY_PLATFORM_SPU_PRIMARY;
    public static final UniqueKey<SellerRecord> KEY_SELLER_PRIMARY = UniqueKeys0.KEY_SELLER_PRIMARY;
    public static final UniqueKey<SellerRecord> KEY_SELLER_PLATFORM_CODE = UniqueKeys0.KEY_SELLER_PLATFORM_CODE;
    public static final UniqueKey<SellerRecord> KEY_SELLER_SHORT_NAME = UniqueKeys0.KEY_SELLER_SHORT_NAME;
    public static final UniqueKey<SellerFetchOrderRecord> KEY_SELLER_FETCH_ORDER_PRIMARY = UniqueKeys0.KEY_SELLER_FETCH_ORDER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<BaseBusinessInfoRecord, Long> IDENTITY_BASE_BUSINESS_INFO = Internal.createIdentity(BaseBusinessInfo.BASE_BUSINESS_INFO, BaseBusinessInfo.BASE_BUSINESS_INFO.ID);
        public static Identity<PlatformSkuRecord, Long> IDENTITY_PLATFORM_SKU = Internal.createIdentity(PlatformSku.PLATFORM_SKU, PlatformSku.PLATFORM_SKU.ID);
        public static Identity<PlatformSpuRecord, Long> IDENTITY_PLATFORM_SPU = Internal.createIdentity(PlatformSpu.PLATFORM_SPU, PlatformSpu.PLATFORM_SPU.ID);
        public static Identity<SellerFetchOrderRecord, Long> IDENTITY_SELLER_FETCH_ORDER = Internal.createIdentity(SellerFetchOrder.SELLER_FETCH_ORDER, SellerFetchOrder.SELLER_FETCH_ORDER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BaseBusinessInfoRecord> KEY_BASE_BUSINESS_INFO_PRIMARY = Internal.createUniqueKey(BaseBusinessInfo.BASE_BUSINESS_INFO, "KEY_base_business_info_PRIMARY", BaseBusinessInfo.BASE_BUSINESS_INFO.ID);
        public static final UniqueKey<PlatformSkuRecord> KEY_PLATFORM_SKU_PRIMARY = Internal.createUniqueKey(PlatformSku.PLATFORM_SKU, "KEY_platform_sku_PRIMARY", PlatformSku.PLATFORM_SKU.ID);
        public static final UniqueKey<PlatformSpuRecord> KEY_PLATFORM_SPU_PRIMARY = Internal.createUniqueKey(PlatformSpu.PLATFORM_SPU, "KEY_platform_spu_PRIMARY", PlatformSpu.PLATFORM_SPU.ID);
        public static final UniqueKey<SellerRecord> KEY_SELLER_PRIMARY = Internal.createUniqueKey(Seller.SELLER, "KEY_seller_PRIMARY", Seller.SELLER.ID);
        public static final UniqueKey<SellerRecord> KEY_SELLER_PLATFORM_CODE = Internal.createUniqueKey(Seller.SELLER, "KEY_seller_platform_code", Seller.SELLER.PLATFORM_CODE, Seller.SELLER.PLATFORM_IDENTITY);
        public static final UniqueKey<SellerRecord> KEY_SELLER_SHORT_NAME = Internal.createUniqueKey(Seller.SELLER, "KEY_seller_short_name", Seller.SELLER.SHORT_NAME);
        public static final UniqueKey<SellerFetchOrderRecord> KEY_SELLER_FETCH_ORDER_PRIMARY = Internal.createUniqueKey(SellerFetchOrder.SELLER_FETCH_ORDER, "KEY_seller_fetch_order_PRIMARY", SellerFetchOrder.SELLER_FETCH_ORDER.ID);
    }
}
