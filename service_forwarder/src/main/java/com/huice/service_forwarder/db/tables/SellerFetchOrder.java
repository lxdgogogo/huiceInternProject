/*
 * This file is generated by jOOQ.
 */
package com.huice.service_forwarder.db.tables;


import com.huice.service_forwarder.db.FdkForwarder2;
import com.huice.service_forwarder.db.Indexes;
import com.huice.service_forwarder.db.Keys;
import com.huice.service_forwarder.db.tables.records.SellerFetchOrderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 代拿子单，对应销端小标签|郑保乐|2021-06-08
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SellerFetchOrder extends TableImpl<SellerFetchOrderRecord> {

    private static final long serialVersionUID = -2062731235;

    /**
     * The reference instance of <code>fdk_forwarder2.seller_fetch_order</code>
     */
    public static final SellerFetchOrder SELLER_FETCH_ORDER = new SellerFetchOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SellerFetchOrderRecord> getRecordType() {
        return SellerFetchOrderRecord.class;
    }

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.id</code>. id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.merchant_id</code>. 商户id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> MERCHANT_ID = createField(DSL.name("merchant_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "商户id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.city_id</code>. 城市id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> CITY_ID = createField(DSL.name("city_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "城市id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.market_id</code>. 市场id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> MARKET_ID = createField(DSL.name("market_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "市场id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.floor_code</code>. 楼层编码（int）|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> FLOOR_CODE = createField(DSL.name("floor_code"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "楼层编码（int）|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.biz_id</code>. 档口表id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> BIZ_ID = createField(DSL.name("biz_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "档口表id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.seller_order_id</code>. 销端子单id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> SELLER_ORDER_ID = createField(DSL.name("seller_order_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "销端子单id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.platform_spu_id</code>. 平台SPU id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> PLATFORM_SPU_ID = createField(DSL.name("platform_spu_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "平台SPU id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.platform_sku_id</code>. 平台SKU id|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> PLATFORM_SKU_ID = createField(DSL.name("platform_sku_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "平台SKU id|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.bill_id</code>. 账单id，未开单为0|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Long> BILL_ID = createField(DSL.name("bill_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "账单id，未开单为0|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.platform_sku_name</code>. 平台SKU名称|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> PLATFORM_SKU_NAME = createField(DSL.name("platform_sku_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "平台SKU名称|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.seller_qr_code</code>. 销端二维码|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> SELLER_QR_CODE = createField(DSL.name("seller_qr_code"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "销端二维码|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.seller_name</code>. 销售商名称|郑保乐|2021-06-21
     */
    public final TableField<SellerFetchOrderRecord, String> SELLER_NAME = createField(DSL.name("seller_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "销售商名称|郑保乐|2021-06-21");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.seller_short_name</code>. 销售商简称|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> SELLER_SHORT_NAME = createField(DSL.name("seller_short_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "销售商简称|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.platform_barcode</code>. 平台条码|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> PLATFORM_BARCODE = createField(DSL.name("platform_barcode"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "平台条码|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.city_name</code>. 城市|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> CITY_NAME = createField(DSL.name("city_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "城市|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.market_name</code>. 市场|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> MARKET_NAME = createField(DSL.name("market_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "市场|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.biz_name</code>. 档口|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> BIZ_NAME = createField(DSL.name("biz_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "档口|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.spu_goods_no</code>. 货号|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> SPU_GOODS_NO = createField(DSL.name("spu_goods_no"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "货号|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.sku_name</code>. SKU名称|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, String> SKU_NAME = createField(DSL.name("sku_name"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "SKU名称|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.ref_fetch_price</code>. 参考拿货价|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, BigDecimal> REF_FETCH_PRICE = createField(DSL.name("ref_fetch_price"), org.jooq.impl.SQLDataType.DECIMAL(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "参考拿货价|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.real_fetch_price</code>. 实际拿货价|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, BigDecimal> REAL_FETCH_PRICE = createField(DSL.name("real_fetch_price"), org.jooq.impl.SQLDataType.DECIMAL(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "实际拿货价|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.status</code>. 状态：@1拿货中 @2已打印 @3已完结 
     */
    public final TableField<SellerFetchOrderRecord, Byte> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "状态：@1拿货中 @2已打印 @3已完结 ");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.tag_print_flag</code>. 是否已打小标签|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Byte> TAG_PRINT_FLAG = createField(DSL.name("tag_print_flag"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否已打小标签|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.seller_refund_flag</code>. 销端售前退款|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Byte> SELLER_REFUND_FLAG = createField(DSL.name("seller_refund_flag"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "销端售前退款|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.scan_time</code>. 扫码到货时间|郑保乐|2021-06-08
     */
    public final TableField<SellerFetchOrderRecord, Timestamp> SCAN_TIME = createField(DSL.name("scan_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "扫码到货时间|郑保乐|2021-06-08");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.created</code>.
     */
    public final TableField<SellerFetchOrderRecord, Timestamp> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>fdk_forwarder2.seller_fetch_order.modified</code>.
     */
    public final TableField<SellerFetchOrderRecord, Timestamp> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>fdk_forwarder2.seller_fetch_order</code> table reference
     */
    public SellerFetchOrder() {
        this(DSL.name("seller_fetch_order"), null);
    }

    /**
     * Create an aliased <code>fdk_forwarder2.seller_fetch_order</code> table reference
     */
    public SellerFetchOrder(String alias) {
        this(DSL.name(alias), SELLER_FETCH_ORDER);
    }

    /**
     * Create an aliased <code>fdk_forwarder2.seller_fetch_order</code> table reference
     */
    public SellerFetchOrder(Name alias) {
        this(alias, SELLER_FETCH_ORDER);
    }

    private SellerFetchOrder(Name alias, Table<SellerFetchOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private SellerFetchOrder(Name alias, Table<SellerFetchOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("代拿子单，对应销端小标签|郑保乐|2021-06-08"));
    }

    public <O extends Record> SellerFetchOrder(Table<O> child, ForeignKey<O, SellerFetchOrderRecord> key) {
        super(child, key, SELLER_FETCH_ORDER);
    }

    @Override
    public Schema getSchema() {
        return FdkForwarder2.FDK_FORWARDER2;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SELLER_FETCH_ORDER_ID_MID_SKUID, Indexes.SELLER_FETCH_ORDER_IDX_BILLID, Indexes.SELLER_FETCH_ORDER_IDX_MID_CITYID_MKTID_FLID_SKUID, Indexes.SELLER_FETCH_ORDER_IDX_MID_OID, Indexes.SELLER_FETCH_ORDER_IDX_PLTF_BARCODE, Indexes.SELLER_FETCH_ORDER_PRIMARY);
    }

    @Override
    public Identity<SellerFetchOrderRecord, Long> getIdentity() {
        return Keys.IDENTITY_SELLER_FETCH_ORDER;
    }

    @Override
    public UniqueKey<SellerFetchOrderRecord> getPrimaryKey() {
        return Keys.KEY_SELLER_FETCH_ORDER_PRIMARY;
    }

    @Override
    public List<UniqueKey<SellerFetchOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<SellerFetchOrderRecord>>asList(Keys.KEY_SELLER_FETCH_ORDER_PRIMARY);
    }

    @Override
    public SellerFetchOrder as(String alias) {
        return new SellerFetchOrder(DSL.name(alias), this);
    }

    @Override
    public SellerFetchOrder as(Name alias) {
        return new SellerFetchOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerFetchOrder rename(String name) {
        return new SellerFetchOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerFetchOrder rename(Name name) {
        return new SellerFetchOrder(name, null);
    }
}
