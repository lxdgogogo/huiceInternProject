/*
 * This file is generated by jOOQ.
 */
package com.huice.service_dyna.db.tables;


import com.huice.service_dyna.db.FdkForwarder2;
import com.huice.service_dyna.db.Indexes;
import com.huice.service_dyna.db.Keys;
import com.huice.service_dyna.db.tables.records.BaseBusinessInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 代拿市场档口商户信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BaseBusinessInfo extends TableImpl<BaseBusinessInfoRecord> {

    private static final long serialVersionUID = -169040866;

    /**
     * The reference instance of <code>fdk_forwarder2.base_business_info</code>
     */
    public static final BaseBusinessInfo BASE_BUSINESS_INFO = new BaseBusinessInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BaseBusinessInfoRecord> getRecordType() {
        return BaseBusinessInfoRecord.class;
    }

    /**
     * The column <code>fdk_forwarder2.base_business_info.id</code>. 主键|曹瑞琪|2021年6月3日18:46:46
     */
    public final TableField<BaseBusinessInfoRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键|曹瑞琪|2021年6月3日18:46:46");

    /**
     * The column <code>fdk_forwarder2.base_business_info.city_code</code>. 城市编码|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, Long> CITY_CODE = createField(DSL.name("city_code"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "城市编码|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.city_name</code>. 城市名称|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, String> CITY_NAME = createField(DSL.name("city_name"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "城市名称|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.market_code</code>. 市场编码|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, Long> MARKET_CODE = createField(DSL.name("market_code"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "市场编码|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.market_name</code>. 市场名称|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, String> MARKET_NAME = createField(DSL.name("market_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "市场名称|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.floor_code</code>. 楼层编码|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, Long> FLOOR_CODE = createField(DSL.name("floor_code"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "楼层编码|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.floor_name</code>. 楼层名称|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, String> FLOOR_NAME = createField(DSL.name("floor_name"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "楼层名称|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.business_code</code>. 档口编码|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, Long> BUSINESS_CODE = createField(DSL.name("business_code"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "档口编码|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.business_name</code>. 档口名称|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, String> BUSINESS_NAME = createField(DSL.name("business_name"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "档口名称|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.business_total_name</code>. 档口全称|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, String> BUSINESS_TOTAL_NAME = createField(DSL.name("business_total_name"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "档口全称|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.delete_flag</code>. 删除标记
     */
    public final TableField<BaseBusinessInfoRecord, Byte> DELETE_FLAG = createField(DSL.name("delete_flag"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "删除标记");

    /**
     * The column <code>fdk_forwarder2.base_business_info.x_coordinate</code>. 经度|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, String> X_COORDINATE = createField(DSL.name("x_coordinate"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "经度|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.y_coordinate</code>. 纬度|2021年6月3日18:50:053|曹瑞琪
     */
    public final TableField<BaseBusinessInfoRecord, String> Y_COORDINATE = createField(DSL.name("y_coordinate"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "纬度|2021年6月3日18:50:053|曹瑞琪");

    /**
     * The column <code>fdk_forwarder2.base_business_info.type</code>. 商户类型|曹瑞琪|2021年6月11日16:20:33|@0 真实商户 1虚拟商户
     */
    public final TableField<BaseBusinessInfoRecord, Byte> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "商户类型|曹瑞琪|2021年6月11日16:20:33|@0 真实商户 1虚拟商户");

    /**
     * The column <code>fdk_forwarder2.base_business_info.created</code>.
     */
    public final TableField<BaseBusinessInfoRecord, Timestamp> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>fdk_forwarder2.base_business_info.modified</code>.
     */
    public final TableField<BaseBusinessInfoRecord, Timestamp> MODIFIED = createField(DSL.name("modified"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>fdk_forwarder2.base_business_info</code> table reference
     */
    public BaseBusinessInfo() {
        this(DSL.name("base_business_info"), null);
    }

    /**
     * Create an aliased <code>fdk_forwarder2.base_business_info</code> table reference
     */
    public BaseBusinessInfo(String alias) {
        this(DSL.name(alias), BASE_BUSINESS_INFO);
    }

    /**
     * Create an aliased <code>fdk_forwarder2.base_business_info</code> table reference
     */
    public BaseBusinessInfo(Name alias) {
        this(alias, BASE_BUSINESS_INFO);
    }

    private BaseBusinessInfo(Name alias, Table<BaseBusinessInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private BaseBusinessInfo(Name alias, Table<BaseBusinessInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("代拿市场档口商户信息表"));
    }

    public <O extends Record> BaseBusinessInfo(Table<O> child, ForeignKey<O, BaseBusinessInfoRecord> key) {
        super(child, key, BASE_BUSINESS_INFO);
    }

    @Override
    public Schema getSchema() {
        return FdkForwarder2.FDK_FORWARDER2;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BASE_BUSINESS_INFO_PRIMARY, Indexes.BASE_BUSINESS_INFO_UK_BIZ_CODE);
    }

    @Override
    public Identity<BaseBusinessInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_BASE_BUSINESS_INFO;
    }

    @Override
    public UniqueKey<BaseBusinessInfoRecord> getPrimaryKey() {
        return Keys.KEY_BASE_BUSINESS_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<BaseBusinessInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<BaseBusinessInfoRecord>>asList(Keys.KEY_BASE_BUSINESS_INFO_PRIMARY);
    }

    @Override
    public BaseBusinessInfo as(String alias) {
        return new BaseBusinessInfo(DSL.name(alias), this);
    }

    @Override
    public BaseBusinessInfo as(Name alias) {
        return new BaseBusinessInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BaseBusinessInfo rename(String name) {
        return new BaseBusinessInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BaseBusinessInfo rename(Name name) {
        return new BaseBusinessInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, Long, String, Long, String, Long, String, Long, String, String, Byte, String, String, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
