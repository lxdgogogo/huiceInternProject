/*
 * This file is generated by jOOQ.
 */
package com.huice.service_fdk.myjooq.db.tables.records;


import com.huice.service_fdk.myjooq.db.tables.PrepareSkuTag;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 拿货小标签|王明亮|2020-11-20
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrepareSkuTagRecord extends UpdatableRecordImpl<PrepareSkuTagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.merchant_id</code>. 商家id|王明亮|2020-11-03
     */
    public void setMerchantId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.merchant_id</code>. 商家id|王明亮|2020-11-03
     */
    public Long getMerchantId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.trade_id</code>. 系统订单id|牛振宇|2020-11-5
     */
    public void setTradeId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.trade_id</code>. 系统订单id|牛振宇|2020-11-5
     */
    public Long getTradeId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.sku_count</code>. 所属订单中所有商品的总和|王明亮|2020-11-03
     */
    public void setSkuCount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.sku_count</code>. 所属订单中所有商品的总和|王明亮|2020-11-03
     */
    public BigDecimal getSkuCount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.pay_time</code>. 系统订单支付时间|王明亮|2020-11-20
     */
    public void setPayTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.pay_time</code>. 系统订单支付时间|王明亮|2020-11-20
     */
    public LocalDateTime getPayTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.order_id</code>. 系统订单id|牛振宇|2020-11-5
     */
    public void setOrderId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.order_id</code>. 系统订单id|牛振宇|2020-11-5
     */
    public Long getOrderId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.spu_id</code>. spu_id|王明亮|2020-11-23
     */
    public void setSpuId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.spu_id</code>. spu_id|王明亮|2020-11-23
     */
    public Long getSpuId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.goods_name</code>. 商品名称|王明亮|2020-11-03
     */
    public void setGoodsName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.goods_name</code>. 商品名称|王明亮|2020-11-03
     */
    public String getGoodsName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.seller_sku_id</code>. 销售商货品 sku id|王明亮|2020-11-03
     */
    public void setSellerSkuId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.seller_sku_id</code>. 销售商货品 sku id|王明亮|2020-11-03
     */
    public Long getSellerSkuId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.sku_name</code>. 规格名称|王明亮|2020-11-03
     */
    public void setSkuName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.sku_name</code>. 规格名称|王明亮|2020-11-03
     */
    public String getSkuName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.supplier_id</code>. 供货商id|王明亮|2020-11-03
     */
    public void setSupplierId(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.supplier_id</code>. 供货商id|王明亮|2020-11-03
     */
    public Long getSupplierId() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.supplier_name</code>. 供货商名称|王明亮|2020-11-03
     */
    public void setSupplierName(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.supplier_name</code>. 供货商名称|王明亮|2020-11-03
     */
    public String getSupplierName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.barcode</code>. 条码|王明亮|2020-11-03
     */
    public void setBarcode(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.barcode</code>. 条码|王明亮|2020-11-03
     */
    public Long getBarcode() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.pick_no</code>. 拣货编号|王明亮|2020-11-03
     */
    public void setPickNo(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.pick_no</code>. 拣货编号|王明亮|2020-11-03
     */
    public String getPickNo() {
        return (String) get(13);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.print_count</code>. 打印次数|王明亮|2020-11-03
     */
    public void setPrintCount(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.print_count</code>. 打印次数|王明亮|2020-11-03
     */
    public Integer getPrintCount() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.last_print_time</code>. 最后打印时间|王明亮|2020-11-03
     */
    public void setLastPrintTime(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.last_print_time</code>. 最后打印时间|王明亮|2020-11-03
     */
    public LocalDateTime getLastPrintTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.tag_status</code>. 小标签状态|@1：备货中；@2：已扫描；@3：已发货；@4：取消备货|郑保乐|2021-01-12
     */
    public void setTagStatus(Byte value) {
        set(16, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.tag_status</code>. 小标签状态|@1：备货中；@2：已扫描；@3：已发货；@4：取消备货|郑保乐|2021-01-12
     */
    public Byte getTagStatus() {
        return (Byte) get(16);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.goods_flag</code>. 货品标记|@0：无；@1：已退货；@2：已被换货；@3：货品解绑 |王明亮|2020年12月09日
     */
    public void setGoodsFlag(Byte value) {
        set(17, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.goods_flag</code>. 货品标记|@0：无；@1：已退货；@2：已被换货；@3：货品解绑 |王明亮|2020年12月09日
     */
    public Byte getGoodsFlag() {
        return (Byte) get(17);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.arrive_status</code>. 到货状态|@1：未到货；@2：已到货；|王明亮|2020-11-20
     */
    public void setArriveStatus(Byte value) {
        set(18, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.arrive_status</code>. 到货状态|@1：未到货；@2：已到货；|王明亮|2020-11-20
     */
    public Byte getArriveStatus() {
        return (Byte) get(18);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.print_status</code>. 打印状态|@1：未打印；@2：已打印；|王明亮|2020-11-20
     */
    public void setPrintStatus(Byte value) {
        set(19, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.print_status</code>. 打印状态|@1：未打印；@2：已打印；|王明亮|2020-11-20
     */
    public Byte getPrintStatus() {
        return (Byte) get(19);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.creator</code>. 创建者名称|王明亮|2020-11-03
     */
    public void setCreator(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.creator</code>. 创建者名称|王明亮|2020-11-03
     */
    public String getCreator() {
        return (String) get(20);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.created</code>. 创建时间|王明亮|2020-11-20
     */
    public void setCreated(LocalDateTime value) {
        set(21, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.created</code>. 创建时间|王明亮|2020-11-20
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.modified</code>. 更新时间|王明亮|2020-11-20
     */
    public void setModified(LocalDateTime value) {
        set(22, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.modified</code>. 更新时间|王明亮|2020-11-20
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.spu_goods_no</code>. 供应商货号|孟炜彬|2021-03-05
     */
    public void setSpuGoodsNo(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.spu_goods_no</code>. 供应商货号|孟炜彬|2021-03-05
     */
    public String getSpuGoodsNo() {
        return (String) get(23);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.refund_flag</code>. 售后退货标记|@0:无；@1:已退货|牛振宇|2021-4-9
     */
    public void setRefundFlag(Byte value) {
        set(24, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.refund_flag</code>. 售后退货标记|@0:无；@1:已退货|牛振宇|2021-4-9
     */
    public Byte getRefundFlag() {
        return (Byte) get(24);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.need_print_again</code>. 小标签是否需要重新打印的标记|@0：不需要；@1：需要重新打印  解释：组合装换货存在小标签拣货码不准，提示用户是否要重新打印|孟炜彬|2021-4-23
     */
    public void setNeedPrintAgain(Byte value) {
        set(25, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.need_print_again</code>. 小标签是否需要重新打印的标记|@0：不需要；@1：需要重新打印  解释：组合装换货存在小标签拣货码不准，提示用户是否要重新打印|孟炜彬|2021-4-23
     */
    public Byte getNeedPrintAgain() {
        return (Byte) get(25);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.goods_no</code>. 货品商家编码|孟炜彬|2021-04-25
     */
    public void setGoodsNo(String value) {
        set(26, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.goods_no</code>. 货品商家编码|孟炜彬|2021-04-25
     */
    public String getGoodsNo() {
        return (String) get(26);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.scan status</code>. 扫描状态| @1 未扫描； @2 已扫描 | 孟炜彬 | 2021-05-12
     */
    public void setScanStatus(Byte value) {
        set(27, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.scan status</code>. 扫描状态| @1 未扫描； @2 已扫描 | 孟炜彬 | 2021-05-12
     */
    public Byte getScanStatus() {
        return (Byte) get(27);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.prior_delivery_flag</code>. 优先发货标记 @0 普通发货；@1优先发货| 孟炜彬 | 2021-04-27
     */
    public void setPriorDeliveryFlag(Byte value) {
        set(28, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.prior_delivery_flag</code>. 优先发货标记 @0 普通发货；@1优先发货| 孟炜彬 | 2021-04-27
     */
    public Byte getPriorDeliveryFlag() {
        return (Byte) get(28);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.sys_express_id</code>. 快递公司id | 孟炜彬 | 2021-05-21
     */
    public void setSysExpressId(Integer value) {
        set(29, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.sys_express_id</code>. 快递公司id | 孟炜彬 | 2021-05-21
     */
    public Integer getSysExpressId() {
        return (Integer) get(29);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.express_name</code>. 快递公司名称 | 孟炜彬 | 2021-05-21
     */
    public void setExpressName(String value) {
        set(30, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.express_name</code>. 快递公司名称 | 孟炜彬 | 2021-05-21
     */
    public String getExpressName() {
        return (String) get(30);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.shop_name</code>. 店铺名称 | 孟炜彬 | 2021-05-21
     */
    public void setShopName(String value) {
        set(31, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.shop_name</code>. 店铺名称 | 孟炜彬 | 2021-05-21
     */
    public String getShopName() {
        return (String) get(31);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.scan_flag</code>. 扫描状态| @1 未扫描； @2 已扫描 | 孟炜彬 | 2021-05-21
     */
    public void setScanFlag(Byte value) {
        set(32, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.scan_flag</code>. 扫描状态| @1 未扫描； @2 已扫描 | 孟炜彬 | 2021-05-21
     */
    public Byte getScanFlag() {
        return (Byte) get(32);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.take_goods_type</code>. 小标签对应的sku拿货类型 | @0 自拿类型；@1代拿类型|孟炜彬|2021-06-08
     */
    public void setTakeGoodsType(Byte value) {
        set(33, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.take_goods_type</code>. 小标签对应的sku拿货类型 | @0 自拿类型；@1代拿类型|孟炜彬|2021-06-08
     */
    public Byte getTakeGoodsType() {
        return (Byte) get(33);
    }

    /**
     * Setter for <code>fdk_goods2.prepare_sku_tag.goods_remark</code>. 货品备注 | 孟炜彬 | 2021-06-30 
     */
    public void setGoodsRemark(String value) {
        set(34, value);
    }

    /**
     * Getter for <code>fdk_goods2.prepare_sku_tag.goods_remark</code>. 货品备注 | 孟炜彬 | 2021-06-30 
     */
    public String getGoodsRemark() {
        return (String) get(34);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PrepareSkuTagRecord
     */
    public PrepareSkuTagRecord() {
        super(PrepareSkuTag.PREPARE_SKU_TAG);
    }

    /**
     * Create a detached, initialised PrepareSkuTagRecord
     */
    public PrepareSkuTagRecord(Long id, Long merchantId, Long tradeId, BigDecimal skuCount, LocalDateTime payTime, Long orderId, Long spuId, String goodsName, Long sellerSkuId, String skuName, Long supplierId, String supplierName, Long barcode, String pickNo, Integer printCount, LocalDateTime lastPrintTime, Byte tagStatus, Byte goodsFlag, Byte arriveStatus, Byte printStatus, String creator, LocalDateTime created, LocalDateTime modified, String spuGoodsNo, Byte refundFlag, Byte needPrintAgain, String goodsNo, Byte scanStatus, Byte priorDeliveryFlag, Integer sysExpressId, String expressName, String shopName, Byte scanFlag, Byte takeGoodsType, String goodsRemark) {
        super(PrepareSkuTag.PREPARE_SKU_TAG);

        setId(id);
        setMerchantId(merchantId);
        setTradeId(tradeId);
        setSkuCount(skuCount);
        setPayTime(payTime);
        setOrderId(orderId);
        setSpuId(spuId);
        setGoodsName(goodsName);
        setSellerSkuId(sellerSkuId);
        setSkuName(skuName);
        setSupplierId(supplierId);
        setSupplierName(supplierName);
        setBarcode(barcode);
        setPickNo(pickNo);
        setPrintCount(printCount);
        setLastPrintTime(lastPrintTime);
        setTagStatus(tagStatus);
        setGoodsFlag(goodsFlag);
        setArriveStatus(arriveStatus);
        setPrintStatus(printStatus);
        setCreator(creator);
        setCreated(created);
        setModified(modified);
        setSpuGoodsNo(spuGoodsNo);
        setRefundFlag(refundFlag);
        setNeedPrintAgain(needPrintAgain);
        setGoodsNo(goodsNo);
        setScanStatus(scanStatus);
        setPriorDeliveryFlag(priorDeliveryFlag);
        setSysExpressId(sysExpressId);
        setExpressName(expressName);
        setShopName(shopName);
        setScanFlag(scanFlag);
        setTakeGoodsType(takeGoodsType);
        setGoodsRemark(goodsRemark);
    }
}
