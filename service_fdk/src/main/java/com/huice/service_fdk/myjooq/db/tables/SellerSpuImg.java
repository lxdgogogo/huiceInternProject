/*
 * This file is generated by jOOQ.
 */
package com.huice.service_fdk.myjooq.db.tables;


import com.huice.service_fdk.myjooq.db.FdkGoods2;
import com.huice.service_fdk.myjooq.db.Indexes;
import com.huice.service_fdk.myjooq.db.Keys;
import com.huice.service_fdk.myjooq.db.tables.records.SellerSpuImgRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * spu图片列表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SellerSpuImg extends TableImpl<SellerSpuImgRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>fdk_goods2.seller_spu_img</code>
     */
    public static final SellerSpuImg SELLER_SPU_IMG = new SellerSpuImg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SellerSpuImgRecord> getRecordType() {
        return SellerSpuImgRecord.class;
    }

    /**
     * The column <code>fdk_goods2.seller_spu_img.id</code>. 自增ID
     */
    public final TableField<SellerSpuImgRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "自增ID");

    /**
     * The column <code>fdk_goods2.seller_spu_img.merchant_id</code>. 销售商/供货商商户id|牛振宇|2020-11-20
     */
    public final TableField<SellerSpuImgRecord, Long> MERCHANT_ID = createField(DSL.name("merchant_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "销售商/供货商商户id|牛振宇|2020-11-20");

    /**
     * The column <code>fdk_goods2.seller_spu_img.spu_id</code>. 销售商/供货商spuId|牛振宇|2020-11-20
     */
    public final TableField<SellerSpuImgRecord, Long> SPU_ID = createField(DSL.name("spu_id"), SQLDataType.BIGINT.nullable(false), this, "销售商/供货商spuId|牛振宇|2020-11-20");

    /**
     * The column <code>fdk_goods2.seller_spu_img.img_url</code>. 图片url|牛振宇|2020-11-20
     */
    public final TableField<SellerSpuImgRecord, String> IMG_URL = createField(DSL.name("img_url"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "图片url|牛振宇|2020-11-20");

    /**
     * The column <code>fdk_goods2.seller_spu_img.delete_flag</code>. 软删除|@0：未删除；@1：已删除|牛振宇|2020-11-20
     */
    public final TableField<SellerSpuImgRecord, Byte> DELETE_FLAG = createField(DSL.name("delete_flag"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "软删除|@0：未删除；@1：已删除|牛振宇|2020-11-20");

    /**
     * The column <code>fdk_goods2.seller_spu_img.created</code>. 创建时间|牛振宇|2020-11-20
     */
    public final TableField<SellerSpuImgRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间|牛振宇|2020-11-20");

    /**
     * The column <code>fdk_goods2.seller_spu_img.modified</code>. 修改时间|牛振宇|2020-11-20
     */
    public final TableField<SellerSpuImgRecord, LocalDateTime> MODIFIED = createField(DSL.name("modified"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "修改时间|牛振宇|2020-11-20");

    private SellerSpuImg(Name alias, Table<SellerSpuImgRecord> aliased) {
        this(alias, aliased, null);
    }

    private SellerSpuImg(Name alias, Table<SellerSpuImgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("spu图片列表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>fdk_goods2.seller_spu_img</code> table reference
     */
    public SellerSpuImg(String alias) {
        this(DSL.name(alias), SELLER_SPU_IMG);
    }

    /**
     * Create an aliased <code>fdk_goods2.seller_spu_img</code> table reference
     */
    public SellerSpuImg(Name alias) {
        this(alias, SELLER_SPU_IMG);
    }

    /**
     * Create a <code>fdk_goods2.seller_spu_img</code> table reference
     */
    public SellerSpuImg() {
        this(DSL.name("seller_spu_img"), null);
    }

    public <O extends Record> SellerSpuImg(Table<O> child, ForeignKey<O, SellerSpuImgRecord> key) {
        super(child, key, SELLER_SPU_IMG);
    }

    @Override
    public Schema getSchema() {
        return FdkGoods2.FDK_GOODS2;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SELLER_SPU_IMG_IDX_MID_SPUID);
    }

    @Override
    public Identity<SellerSpuImgRecord, Long> getIdentity() {
        return (Identity<SellerSpuImgRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SellerSpuImgRecord> getPrimaryKey() {
        return Keys.KEY_SELLER_SPU_IMG_PRIMARY;
    }

    @Override
    public List<UniqueKey<SellerSpuImgRecord>> getKeys() {
        return Arrays.<UniqueKey<SellerSpuImgRecord>>asList(Keys.KEY_SELLER_SPU_IMG_PRIMARY);
    }

    @Override
    public SellerSpuImg as(String alias) {
        return new SellerSpuImg(DSL.name(alias), this);
    }

    @Override
    public SellerSpuImg as(Name alias) {
        return new SellerSpuImg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerSpuImg rename(String name) {
        return new SellerSpuImg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SellerSpuImg rename(Name name) {
        return new SellerSpuImg(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, String, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
