/*
 * This file is generated by jOOQ.
 */
package com.huice.service_fdk.myjooq.db.tables.records;


import com.huice.service_fdk.myjooq.db.tables.SellerSku;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 销售商货品SKU表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SellerSkuRecord extends UpdatableRecordImpl<SellerSkuRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>fdk_goods2.seller_sku.id</code>. 自增ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.id</code>. 自增ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.merchant_id</code>. 商户id|牛振宇|2020-11-03
     */
    public void setMerchantId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.merchant_id</code>. 商户id|牛振宇|2020-11-03
     */
    public Long getMerchantId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.platform_sku_rec_id</code>. 平台sku表主键|牛振宇|2020-11-20
     */
    public void setPlatformSkuRecId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.platform_sku_rec_id</code>. 平台sku表主键|牛振宇|2020-11-20
     */
    public Long getPlatformSkuRecId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.source_type</code>. 来源|@1 来自平台订单 @2来自平台下载 @3 盘TA 后生成的@4 销售商自建|郑保乐|2020-11-27
     */
    public void setSourceType(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.source_type</code>. 来源|@1 来自平台订单 @2来自平台下载 @3 盘TA 后生成的@4 销售商自建|郑保乐|2020-11-27
     */
    public Byte getSourceType() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.sale_status</code>. 在售状态｜ @1：在架 @2：下架 @3：店铺已删除 @4：自建默认显示 "/" | 魏柯 | 2020-12-10
     */
    public void setSaleStatus(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.sale_status</code>. 在售状态｜ @1：在架 @2：下架 @3：店铺已删除 @4：自建默认显示 "/" | 魏柯 | 2020-12-10
     */
    public Byte getSaleStatus() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.spu_id</code>. spu主键|牛振宇|2020-11-20
     */
    public void setSpuId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.spu_id</code>. spu主键|牛振宇|2020-11-20
     */
    public Long getSpuId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.sku_name</code>. sku名称|孟炜彬|2020-11-23
     */
    public void setSkuName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.sku_name</code>. sku名称|孟炜彬|2020-11-23
     */
    public String getSkuName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.sku_no</code>. 规格编码|牛振宇|2020-11-03
     */
    public void setSkuNo(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.sku_no</code>. 规格编码|牛振宇|2020-11-03
     */
    public String getSkuNo() {
        return (String) get(7);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.sku_code</code>. 规格码|牛振宇|2020-11-10
     */
    public void setSkuCode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.sku_code</code>. 规格码|牛振宇|2020-11-10
     */
    public String getSkuCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.barcode</code>. 主条码，多个条码用逗号分隔|牛振宇|2020-11-10
     */
    public void setBarcode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.barcode</code>. 主条码，多个条码用逗号分隔|牛振宇|2020-11-10
     */
    public String getBarcode() {
        return (String) get(9);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.barcode_num</code>. 条码个数|牛振宇|2020-11-12
     */
    public void setBarcodeNum(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.barcode_num</code>. 条码个数|牛振宇|2020-11-12
     */
    public Short getBarcodeNum() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.real_num</code>. 实际库存|牛振宇|2020-11-20
     */
    public void setRealNum(BigDecimal value) {
        set(11, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.real_num</code>. 实际库存|牛振宇|2020-11-20
     */
    public BigDecimal getRealNum() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.occupied_num</code>. 已占用库存|牛振宇|2020-11-20
     */
    public void setOccupiedNum(BigDecimal value) {
        set(12, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.occupied_num</code>. 已占用库存|牛振宇|2020-11-20
     */
    public BigDecimal getOccupiedNum() {
        return (BigDecimal) get(12);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.to_out_num</code>. 待出库库存|刘宇晴|2020-12-09
     */
    public void setToOutNum(BigDecimal value) {
        set(13, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.to_out_num</code>. 待出库库存|刘宇晴|2020-12-09
     */
    public BigDecimal getToOutNum() {
        return (BigDecimal) get(13);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.available_num</code>. 可发库存|牛振宇|2020-11-20
     */
    public void setAvailableNum(BigDecimal value) {
        set(14, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.available_num</code>. 可发库存|牛振宇|2020-11-20
     */
    public BigDecimal getAvailableNum() {
        return (BigDecimal) get(14);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.img_url</code>. 图片url|牛振宇|2020-11-03
     */
    public void setImgUrl(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.img_url</code>. 图片url|牛振宇|2020-11-03
     */
    public String getImgUrl() {
        return (String) get(15);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.weight</code>. 重量|牛振宇|2020-11-03
     */
    public void setWeight(BigDecimal value) {
        set(16, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.weight</code>. 重量|牛振宇|2020-11-03
     */
    public BigDecimal getWeight() {
        return (BigDecimal) get(16);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.volume</code>. 体积|牛振宇|2020-11-07
     */
    public void setVolume(BigDecimal value) {
        set(17, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.volume</code>. 体积|牛振宇|2020-11-07
     */
    public BigDecimal getVolume() {
        return (BigDecimal) get(17);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.large_size_type</code>. 大件类型，用于按照大件自动拆单|@0非大件 @1普通大件 @2独立大件|牛振宇|2020-11-07
     */
    public void setLargeSizeType(Byte value) {
        set(18, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.large_size_type</code>. 大件类型，用于按照大件自动拆单|@0非大件 @1普通大件 @2独立大件|牛振宇|2020-11-07
     */
    public Byte getLargeSizeType() {
        return (Byte) get(18);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.retail_price</code>. 平台零售价|牛振宇|2020-11-07
     */
    public void setRetailPrice(BigDecimal value) {
        set(19, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.retail_price</code>. 平台零售价|牛振宇|2020-11-07
     */
    public BigDecimal getRetailPrice() {
        return (BigDecimal) get(19);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.wholesale_price</code>. 批发价|牛振宇|2020-11-07
     */
    public void setWholesalePrice(BigDecimal value) {
        set(20, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.wholesale_price</code>. 批发价|牛振宇|2020-11-07
     */
    public BigDecimal getWholesalePrice() {
        return (BigDecimal) get(20);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.lowest_price</code>. 最低价|牛振宇|2020-11-12
     */
    public void setLowestPrice(BigDecimal value) {
        set(21, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.lowest_price</code>. 最低价|牛振宇|2020-11-12
     */
    public BigDecimal getLowestPrice() {
        return (BigDecimal) get(21);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.member_price</code>. 会员价|牛振宇|2020-11-12
     */
    public void setMemberPrice(BigDecimal value) {
        set(22, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.member_price</code>. 会员价|牛振宇|2020-11-12
     */
    public BigDecimal getMemberPrice() {
        return (BigDecimal) get(22);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.market_price</code>. 市场价|牛振宇|2020-11-12
     */
    public void setMarketPrice(BigDecimal value) {
        set(23, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.market_price</code>. 市场价|牛振宇|2020-11-12
     */
    public BigDecimal getMarketPrice() {
        return (BigDecimal) get(23);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.validity_days</code>. 保质期天数|牛振宇|2020-11-12
     */
    public void setValidityDays(Short value) {
        set(24, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.validity_days</code>. 保质期天数|牛振宇|2020-11-12
     */
    public Short getValidityDays() {
        return (Short) get(24);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.best_sale_days</code>. 最佳销售天数|牛振宇|2020-11-12
     */
    public void setBestSaleDays(Short value) {
        set(25, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.best_sale_days</code>. 最佳销售天数|牛振宇|2020-11-12
     */
    public Short getBestSaleDays() {
        return (Short) get(25);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.best_receive_days</code>. 最佳收货天数|牛振宇|2020-11-12
     */
    public void setBestReceiveDays(Short value) {
        set(26, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.best_receive_days</code>. 最佳收货天数|牛振宇|2020-11-12
     */
    public Short getBestReceiveDays() {
        return (Short) get(26);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.replace_proportion</code>. 同款备注换货--虚拟货品换货比例|牛振宇|2020-11-10
     */
    public void setReplaceProportion(Byte value) {
        set(27, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.replace_proportion</code>. 同款备注换货--虚拟货品换货比例|牛振宇|2020-11-10
     */
    public Byte getReplaceProportion() {
        return (Byte) get(27);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.replace_no</code>. 备注换货匹配码|牛振宇|2020-11-10
     */
    public void setReplaceNo(String value) {
        set(28, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.replace_no</code>. 备注换货匹配码|牛振宇|2020-11-10
     */
    public String getReplaceNo() {
        return (String) get(28);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.replace_mask</code>. 备注换货标识二进制位 1同款备注换货虚拟规格 2是否在备注换货界面展示|牛振宇|2020-11-12
     */
    public void setReplaceMask(Integer value) {
        set(29, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.replace_mask</code>. 备注换货标识二进制位 1同款备注换货虚拟规格 2是否在备注换货界面展示|牛振宇|2020-11-12
     */
    public Integer getReplaceMask() {
        return (Integer) get(29);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.delete_flag</code>. 软删除，盘TA后置为1|@0：未删除；@1：已删除|牛振宇|2020-11-03
     */
    public void setDeleteFlag(Byte value) {
        set(30, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.delete_flag</code>. 软删除，盘TA后置为1|@0：未删除；@1：已删除|牛振宇|2020-11-03
     */
    public Byte getDeleteFlag() {
        return (Byte) get(30);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.delete_time</code>. 软删除时间，盘TA后设置该时间|牛振宇|2020-11-03
     */
    public void setDeleteTime(LocalDateTime value) {
        set(31, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.delete_time</code>. 软删除时间，盘TA后设置该时间|牛振宇|2020-11-03
     */
    public LocalDateTime getDeleteTime() {
        return (LocalDateTime) get(31);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.pid</code>. 盘TA后被指定的父级skuId|牛振宇|2020-11-07
     */
    public void setPid(Long value) {
        set(32, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.pid</code>. 盘TA后被指定的父级skuId|牛振宇|2020-11-07
     */
    public Long getPid() {
        return (Long) get(32);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.show_flag</code>. 是否展示在货品列表|@0不展示@1展示|郑保乐|2020-12-17
     */
    public void setShowFlag(Byte value) {
        set(33, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.show_flag</code>. 是否展示在货品列表|@0不展示@1展示|郑保乐|2020-12-17
     */
    public Byte getShowFlag() {
        return (Byte) get(33);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.basic_unit</code>. 基本单位|牛振宇|2020-11-07
     */
    public void setBasicUnit(String value) {
        set(34, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.basic_unit</code>. 基本单位|牛振宇|2020-11-07
     */
    public String getBasicUnit() {
        return (String) get(34);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.aux_unit</code>. 辅助单位|牛振宇|2020-11-07
     */
    public void setAuxUnit(String value) {
        set(35, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.aux_unit</code>. 辅助单位|牛振宇|2020-11-07
     */
    public String getAuxUnit() {
        return (String) get(35);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.tax_code_id</code>. 关联税务表税务编码|牛振宇|2020-11-12
     */
    public void setTaxCodeId(Integer value) {
        set(36, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.tax_code_id</code>. 关联税务表税务编码|牛振宇|2020-11-12
     */
    public Integer getTaxCodeId() {
        return (Integer) get(36);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.tax_rate</code>. 税率|牛振宇|2020-11-12
     */
    public void setTaxRate(BigDecimal value) {
        set(37, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.tax_rate</code>. 税率|牛振宇|2020-11-12
     */
    public BigDecimal getTaxRate() {
        return (BigDecimal) get(37);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(38, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(38);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.modified</code>.
     */
    public void setModified(LocalDateTime value) {
        set(39, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.modified</code>.
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(39);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.pack_flag</code>. 组合装标识 @0:单品 @1:组合装|郑保乐|2021-04-20
     */
    public void setPackFlag(Byte value) {
        set(40, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.pack_flag</code>. 组合装标识 @0:单品 @1:组合装|郑保乐|2021-04-20
     */
    public Byte getPackFlag() {
        return (Byte) get(40);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.prior_occupied_num</code>. 优先占用|刘宇晴|2021-04-27
     */
    public void setPriorOccupiedNum(BigDecimal value) {
        set(41, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.prior_occupied_num</code>. 优先占用|刘宇晴|2021-04-27
     */
    public BigDecimal getPriorOccupiedNum() {
        return (BigDecimal) get(41);
    }

    /**
     * Setter for <code>fdk_goods2.seller_sku.take_goods_type</code>. 子单中的货品拿货类型 @0 自拿；@1 代拿|刘宇晴|2021-06-08
     */
    public void setTakeGoodsType(Byte value) {
        set(42, value);
    }

    /**
     * Getter for <code>fdk_goods2.seller_sku.take_goods_type</code>. 子单中的货品拿货类型 @0 自拿；@1 代拿|刘宇晴|2021-06-08
     */
    public Byte getTakeGoodsType() {
        return (Byte) get(42);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SellerSkuRecord
     */
    public SellerSkuRecord() {
        super(SellerSku.SELLER_SKU);
    }

    /**
     * Create a detached, initialised SellerSkuRecord
     */
    public SellerSkuRecord(Long id, Long merchantId, Long platformSkuRecId, Byte sourceType, Byte saleStatus, Long spuId, String skuName, String skuNo, String skuCode, String barcode, Short barcodeNum, BigDecimal realNum, BigDecimal occupiedNum, BigDecimal toOutNum, BigDecimal availableNum, String imgUrl, BigDecimal weight, BigDecimal volume, Byte largeSizeType, BigDecimal retailPrice, BigDecimal wholesalePrice, BigDecimal lowestPrice, BigDecimal memberPrice, BigDecimal marketPrice, Short validityDays, Short bestSaleDays, Short bestReceiveDays, Byte replaceProportion, String replaceNo, Integer replaceMask, Byte deleteFlag, LocalDateTime deleteTime, Long pid, Byte showFlag, String basicUnit, String auxUnit, Integer taxCodeId, BigDecimal taxRate, LocalDateTime created, LocalDateTime modified, Byte packFlag, BigDecimal priorOccupiedNum, Byte takeGoodsType) {
        super(SellerSku.SELLER_SKU);

        setId(id);
        setMerchantId(merchantId);
        setPlatformSkuRecId(platformSkuRecId);
        setSourceType(sourceType);
        setSaleStatus(saleStatus);
        setSpuId(spuId);
        setSkuName(skuName);
        setSkuNo(skuNo);
        setSkuCode(skuCode);
        setBarcode(barcode);
        setBarcodeNum(barcodeNum);
        setRealNum(realNum);
        setOccupiedNum(occupiedNum);
        setToOutNum(toOutNum);
        setAvailableNum(availableNum);
        setImgUrl(imgUrl);
        setWeight(weight);
        setVolume(volume);
        setLargeSizeType(largeSizeType);
        setRetailPrice(retailPrice);
        setWholesalePrice(wholesalePrice);
        setLowestPrice(lowestPrice);
        setMemberPrice(memberPrice);
        setMarketPrice(marketPrice);
        setValidityDays(validityDays);
        setBestSaleDays(bestSaleDays);
        setBestReceiveDays(bestReceiveDays);
        setReplaceProportion(replaceProportion);
        setReplaceNo(replaceNo);
        setReplaceMask(replaceMask);
        setDeleteFlag(deleteFlag);
        setDeleteTime(deleteTime);
        setPid(pid);
        setShowFlag(showFlag);
        setBasicUnit(basicUnit);
        setAuxUnit(auxUnit);
        setTaxCodeId(taxCodeId);
        setTaxRate(taxRate);
        setCreated(created);
        setModified(modified);
        setPackFlag(packFlag);
        setPriorOccupiedNum(priorOccupiedNum);
        setTakeGoodsType(takeGoodsType);
    }
}
